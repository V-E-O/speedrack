tasks:

- name: interval running
  description: an interval task that is currently executing
  command: sleep 20 && echo success
  interval: 21s
  max_keep: 50

- name: interval winner
  description: an interval task that succeeds
  command: python -c "import random, string; print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(60)))"
  interval: 61s
  max_keep: 50

- name: interval failer return code
  description: an interval task that fails via status code
  command: sleep 1 && false
  interval: 62s
  max_keep: 50
  fail_by_retcode: True

- name: interval failer stderr
  description: an interval task that fails via stderr
  command: python -c "import random, string; print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(60)))" 1>&2
  interval: 63s
  max_keep: 50
  # default but testing
  fail_by_stderr: True

- name: interval winner later
  description: an interval task that hasn't been run yet
  command: python -c "import random, string; print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(60)))"
  interval: 400w

- name: interval failer later
  description: an interval task that will never naturally run, but will fail at will
  command: python -c "import random, string; print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(60)))" 1>&2
  interval: 400w
  email_recipients: clint.howarth@gmail.com

- name: interval failer later spammer
  description: an interval task that's Run Now and fails
  command: sleep 1 && false
  interval: 400w
  email: chowarth@broadinstitute.org
  spam: oh hell yes
  max_keep: 50

- name: interval failer stdout stderr
  description: generates around 10k to stdout and 50k to stderr
  command: python -c "import random, string, sys; print >> sys.stderr, ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(48000, 52000))); print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(8000, 12000)))"
  interval: 30m
  max_keep: 20

- name: interval winner status code
  description: an interval task that succeeds despite status code
  command: sleep 1 && false
  interval: 65s
  fail_by_retcode: False

- name: cron winner stdout
  description: serves the role of a cron task that succeeds
  command: python -c "import random, string; print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(60)))"
  cron: { 'second': 20 }
  max_keep: 20

- name: cron failer status code
  description: serves the role of a cron task that fails via status code
  command: sleep 1 && false
  cron: { 'second': 21 }
  max_keep: 20

- name: cron winner stderr
  description: serves the role of a cron task that passes with stderr
  command: python -c "import random, string, sys; print >> sys.stderr, ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(48000, 52000))); print ''.join(random.choice(string.ascii_uppercase) for x in range(random.randrange(8000, 12000)))"
  cron: { 'second': 5 }
  fail_by_stderr: False

- name: conf error missing command
  description: serves the role of an interval task that isn't wired right (missing command)
  interval: 20w

- name: conf error cron
  description: a cron task that has superfluous keywords
  command: sleep 1 && false
  cron: { 'second': 15, 'minutes': 30 }
  max_keep: 50

- name: conf error timing
  description: a task with both interval and cron
  command: sleep 1 && false
  interval: 64s
  cron: { 'second': 5 }
  max_keep: 50
